<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="overtime_control.infrastructure.repository.UserRepository">

	<resultMap id="MUser" type="overtime_control.domain.model.MUser">
		<id property="id" column="id"/>
		<result property="email" column="email"/>
		<result property="password" column="password"/>
		<result property="familyName" column="family_name"/>
		<result property="firstName" column="first_name"/>
		<result property="role" column="role"
			javaType="overtime_control.domain.model.UserRole"
			typeHandler="overtime_control.infrastructure.typeHandler.UserRoleTypeHandler"/>
		<association property="department"
			javaType="overtime_control.domain.model.Department">
			<id property="id" column="department_id"/>
			<result property="departmentName" column="department_name"/>
		</association>
	</resultMap>

	<select id="findAll" resultMap="MUser">
		select u.*,d.department_name
		from
		m_user u
		join department d on u.department_id = d.id
	</select>

	<select id="findById" resultMap="MUser">
		select u.*, d.department_name
		from
		m_user u
		join department d on u.department_id = d.id
		where u.id = #{id}
	</select>

	<select id="findByEmail" resultMap="MUser">
		select u.*, d.department_name
		from
		m_user u
		join department d on u.department_id = d.id
		where
		u.email = #{email}
	</select>

	<insert id="insert">
		insert into m_user(
		email,
		password,
		family_name,
		first_name,
		role,
		department_id
		) values (
		#{email},
		#{password},
		#{familyName},
		#{firstName},
		#{role.id},
		#{department.id}
		)
	</insert>

	<update id="update">
		update m_user
		set 
		email = #{email},
		password = #{password},
		family_name = #{familyName},
		first_name = #{firstName},
		role = #{role.id},
		department_id = #{department.id}
		where id = #{id}
	</update>

	<delete id="delete">
		delete from m_user where id = #{id}
	</delete>

</mapper>